# www.jenkins.io
resource "fastly_service_vcl" "jenkinsio" {
  name           = "www.jenkins.io"
  activate       = true
  stale_if_error = true
  domain {
    name = "www.jenkins.io"
  }

  backend {
    address               = "www.origin.jenkins.io"
    auto_loadbalance      = false
    between_bytes_timeout = 10000
    connect_timeout       = 1000
    first_byte_timeout    = 15000
    healthcheck           = "public.publick8s.jenkins.io"
    max_conn              = 200
    name                  = "www.origin.jenkins.io"
    port                  = 443
    ssl_cert_hostname     = "www.origin.jenkins.io"
    ssl_check_cert        = true
    ssl_sni_hostname      = "www.origin.jenkins.io"
    use_ssl               = true
    weight                = 100
  }

  healthcheck {
    check_interval    = 60000
    expected_response = 200
    host              = "www.jenkins.io"
    http_version      = "1.1"
    initial           = 1
    method            = "GET"
    name              = "public.publick8s.jenkins.io"
    path              = "/"
    threshold         = 1
    timeout           = 5000
    window            = 2
  }

  request_setting {
    bypass_busy_wait = false
    force_miss       = false
    force_ssl        = true
    max_stale_age    = 0
    name             = "Force SSL"
    timer_support    = false
  }

  gzip {
    content_types = var.gzip_content_types
    extensions    = var.gzip_extensions
    name          = "Generated by default gzip policy"
  }

  # Header(s)
  header {
    action        = "set"
    destination   = "http.Strict-Transport-Security"
    ignore_if_set = false
    name          = "strict-transport-security-custom"
    priority      = 10
    source        = "\"max-age=86400; includeSubDomains; preload\""
    type          = "response"
  }

  header {
    action        = "set"
    destination   = "http.X-Frame-Options"
    ignore_if_set = true
    name          = "X-Frame-Options-deny"
    priority      = 10
    source        = "\"DENY\""
    type          = "response"
  }

  header {
    action        = "set"
    destination   = "http.x-content-type-options"
    ignore_if_set = true
    name          = "x-content-type-options-nosniff"
    priority      = 10
    source        = "\"nosniff\""
    type          = "response"
  }

  snippet {
    content  = <<-EOT
                set req.http.Accept-Language =
                  accept.language_lookup("en:zh", "en",
                  req.http.Accept-Language);
            EOT
    name     = "Accepted Language"
    priority = 100
    type     = "recv"
  }
}

# pkg.jenkins.io
resource "fastly_service_vcl" "pkg" {
  name           = "pkg.jenkins.io"
  activate       = true
  stale_if_error = true
  domain {
    name = "pkg.jenkins.io"
  }

  backend {
    address               = "pkg.origin.jenkins.io"
    auto_loadbalance      = false
    between_bytes_timeout = 10000
    connect_timeout       = 1000
    first_byte_timeout    = 15000
    max_conn              = 200
    name                  = "pkg.origin.jenkins.io"
    port                  = 443
    ssl_cert_hostname     = "pkg.origin.jenkins.io"
    ssl_check_cert        = true
    ssl_sni_hostname      = "pkg.origin.jenkins.io"
    use_ssl               = true
    weight                = 100
    override_host         = "pkg.origin.jenkins.io" # Avoid AH02032 (SNI set to "pkg.origin.jenkins.io" but host set to "pkg.jenkins.io")
  }

  healthcheck {
    check_interval    = 60000
    expected_response = 200
    host              = "pkg.jenkins.io"
    http_version      = "1.1"
    initial           = 1
    method            = "GET"
    name              = "pkg.origin.jenkins.io"
    path              = "/"
    threshold         = 1
    timeout           = 5000
    window            = 2
  }

  request_setting {
    bypass_busy_wait = false
    force_miss       = false
    force_ssl        = true
    max_stale_age    = 0
    name             = "Generated by force TLS and enable HSTS"
    timer_support    = false
  }

  # Header(s)
  header {
    action        = "set"
    destination   = "http.Strict-Transport-Security"
    ignore_if_set = false
    name          = "Generated by force TLS and enable HSTS"
    priority      = 100
    source        = "\"max-age=300\""
    type          = "response"
  }
}

# plugins.jenkins.io
resource "fastly_service_vcl" "plugins" {
  name           = "plugins.jenkins.io"
  activate       = true
  stale_if_error = true
  domain {
    name = "plugins.jenkins.io"
  }
  backend {
    address               = "plugins.origin.jenkins.io"
    auto_loadbalance      = false
    between_bytes_timeout = 10000
    connect_timeout       = 1000
    first_byte_timeout    = 15000
    healthcheck           = "plugins site"
    max_conn              = 200
    name                  = "plugins.origin.jenkins.io"
    port                  = 443
    ssl_cert_hostname     = "plugins.origin.jenkins.io"
    ssl_check_cert        = true
    ssl_sni_hostname      = "plugins.origin.jenkins.io"
    use_ssl               = true
    weight                = 100
  }

  healthcheck {
    check_interval    = 60000
    expected_response = 200
    host              = "plugins.origin.jenkins.io"
    http_version      = "1.1"
    initial           = 1
    method            = "HEAD"
    name              = "plugins site"
    path              = "/"
    threshold         = 1
    timeout           = 5000
    window            = 2
  }

  request_setting {
    bypass_busy_wait = false
    force_miss       = false
    force_ssl        = true
    max_stale_age    = 0
    name             = "Generated by force TLS and enable HSTS"
    timer_support    = false
  }

  condition {
    name      = "No 404 cache"
    priority  = 10
    statement = "beresp.status == 404"
    type      = "CACHE"
  }

  cache_setting {
    action          = "pass"
    cache_condition = "No 404 cache"
    name            = "No 404 cache"
    stale_ttl       = 60
    ttl             = 60
  }

  # Header(s)
  header {
    action        = "set"
    destination   = "http.Strict-Transport-Security"
    ignore_if_set = false
    name          = "Generated by force TLS and enable HSTS"
    priority      = 100
    source        = "\"max-age=31557600\""
    type          = "response"
  }
}

# stories.jenkins.io
resource "fastly_service_vcl" "stories" {
  name           = "stories.jenkins.io"
  activate       = true
  stale_if_error = true

  domain {
    name = "stories.jenkins.io"
  }

  backend {
    address               = "jenkins-is-the-way.netlify.app"
    auto_loadbalance      = false
    between_bytes_timeout = 10000
    connect_timeout       = 1000
    first_byte_timeout    = 15000
    healthcheck           = "stories site"
    max_conn              = 200
    name                  = "jenkins-is-the-way.netlify.app"
    override_host         = "jenkins-is-the-way.netlify.app"
    port                  = 443
    ssl_cert_hostname     = "jenkins-is-the-way.netlify.app"
    ssl_check_cert        = true
    ssl_sni_hostname      = "jenkins-is-the-way.netlify.app"
    use_ssl               = true
    weight                = 100
  }

  healthcheck {
    check_interval    = 60000
    expected_response = 200
    host              = "jenkins-is-the-way.netlify.app"
    http_version      = "1.1"
    initial           = 1
    method            = "HEAD"
    name              = "stories site"
    path              = "/"
    threshold         = 1
    timeout           = 5000
    window            = 2
  }

  request_setting {
    bypass_busy_wait = false
    force_miss       = false
    force_ssl        = true
    max_stale_age    = 0
    name             = "Generated by force TLS and enable HSTS"
    timer_support    = false
  }

  condition {
    name      = "No 404 cache"
    priority  = 10
    statement = "beresp.status == 404"
    type      = "CACHE"
  }

  cache_setting {
    action          = "pass"
    cache_condition = "No 404 cache"
    name            = "No 404 cache"
    stale_ttl       = 60
    ttl             = 60
  }

  # Header(s)
  header {
    action        = "set"
    destination   = "http.Strict-Transport-Security"
    ignore_if_set = false
    name          = "Generated by force TLS and enable HSTS"
    priority      = 100
    source        = "\"max-age=31557600\""
    type          = "response"
  }
}

resource "fastly_tls_subscription" "stories" {
  domains               = [for domain in fastly_service_vcl.stories.domain : domain.name]
  certificate_authority = "lets-encrypt"
}

# contributors.jenkins.io
resource "fastly_service_vcl" "contributors" {
  name           = "contributors.jenkins.io"
  activate       = true
  stale_if_error = true

  domain {
    name = "contributors.jenkins.io"
  }

  backend {
    address               = "contributors.origin.jenkins.io"
    auto_loadbalance      = false
    between_bytes_timeout = 10000
    connect_timeout       = 1000
    first_byte_timeout    = 15000
    healthcheck           = "contributors site"
    max_conn              = 200
    name                  = "contributors.origin.jenkins.io"
    override_host         = "contributors.origin.jenkins.io"
    port                  = 443
    ssl_cert_hostname     = "contributors.origin.jenkins.io"
    ssl_check_cert        = true
    ssl_sni_hostname      = "contributors.origin.jenkins.io"
    use_ssl               = true
    weight                = 100
  }

  healthcheck {
    check_interval    = 60000
    expected_response = 200
    host              = "contributors.origin.jenkins.io"
    http_version      = "1.1"
    initial           = 1
    method            = "HEAD"
    name              = "contributors site"
    path              = "/"
    threshold         = 1
    timeout           = 5000
    window            = 2
  }

  request_setting {
    bypass_busy_wait = false
    force_miss       = false
    force_ssl        = true
    max_stale_age    = 0
    name             = "Generated by force TLS and enable HSTS"
    timer_support    = false
  }

  condition {
    name      = "No 404 cache"
    priority  = 10
    statement = "beresp.status == 404"
    type      = "CACHE"
  }

  cache_setting {
    action          = "pass"
    cache_condition = "No 404 cache"
    name            = "No 404 cache"
    stale_ttl       = 60
    ttl             = 60
  }

  # Header(s)
  header {
    action        = "set"
    destination   = "http.Strict-Transport-Security"
    ignore_if_set = false
    name          = "Generated by force TLS and enable HSTS"
    priority      = 100
    source        = "\"max-age=31557600\""
    type          = "response"
  }
}

resource "fastly_tls_subscription" "contributors" {
  domains               = [for domain in fastly_service_vcl.contributors.domain : domain.name]
  certificate_authority = "lets-encrypt"
}

# docs.jenkins.io
resource "fastly_service_vcl" "docs" {
  name           = "docs.jenkins.io"
  activate       = true
  stale_if_error = true

  domain {
    name = "docs.jenkins.io"
  }

  backend {
    address               = "docs.origin.jenkins.io"
    auto_loadbalance      = false
    between_bytes_timeout = 10000
    connect_timeout       = 1000
    first_byte_timeout    = 15000
    healthcheck           = "docs site"
    max_conn              = 200
    name                  = "docs.origin.jenkins.io"
    override_host         = "docs.origin.jenkins.io"
    port                  = 443
    ssl_cert_hostname     = "docs.origin.jenkins.io"
    ssl_check_cert        = true
    ssl_sni_hostname      = "docs.origin.jenkins.io"
    use_ssl               = true
    weight                = 100
  }

  healthcheck {
    check_interval    = 60000
    expected_response = 200
    host              = "docs.origin.jenkins.io"
    http_version      = "1.1"
    initial           = 1
    method            = "HEAD"
    name              = "docs site"
    path              = "/"
    threshold         = 1
    timeout           = 5000
    window            = 2
  }

  request_setting {
    bypass_busy_wait = false
    force_miss       = false
    force_ssl        = true
    max_stale_age    = 0
    name             = "Generated by force TLS and enable HSTS"
    timer_support    = false
  }

  condition {
    name      = "No 404 cache"
    priority  = 10
    statement = "beresp.status == 404"
    type      = "CACHE"
  }

  cache_setting {
    action          = "pass"
    cache_condition = "No 404 cache"
    name            = "No 404 cache"
    stale_ttl       = 60
    ttl             = 60
  }

  # Header(s)
  header {
    action        = "set"
    destination   = "http.Strict-Transport-Security"
    ignore_if_set = false
    name          = "Generated by force TLS and enable HSTS"
    priority      = 100
    source        = "\"max-age=31557600\""
    type          = "response"
  }
}

resource "fastly_tls_subscription" "docs" {
  domains               = [for domain in fastly_service_vcl.docs.domain : domain.name]
  certificate_authority = "lets-encrypt"
}
